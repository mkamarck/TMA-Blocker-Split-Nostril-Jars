{
    "contents" : "#Create a statistical analysis which can tell us how many participants we will need to run, roughly\n#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\n\n########################################################################################################################\n#Code from 'Analysis MK Data.R'\n########################################################################################################################\n\n#set working directory\nsetwd(\"/Volumes/mainland/Projects/TMA blocker/Setup6/\")\n\n#import data\nsubj <- dir(path = \"Results/\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim,stringsAsFactors=FALSE)\n\n##subsetdata to get rid of test mode and include only relevant columnss\ndfSubset  <- subset(df, Procedure.SubTrial. == \"RatingProc\", select = c (\"Subject\", \"Session\", \"DataFile.Basename\", \"Running.Block.\", \"Procedure.Block.\", \"Odor\", \"Trial\", \"Procedure.Trial.\", \"Procedure.SubTrial.\", \"OdorType.SubTrial.\", \"PleasantRating\", \"BlockRating\", \"TMARating\"))\ndfSubset2  <- dfSubset[c(-2:-5,-9:-10)]\n\n#convert scales\ndfSubset2$TMA  <- abs(as.integer(dfSubset2$TMARating)-400)\ndfSubset2$Antag  <- abs(as.integer(dfSubset2$BlockRating) - 400)\ndfSubset2$Pleasant  <- abs(as.integer(dfSubset2$PleasantRating) - 400)\n\n#normalize TMA and Block in each block of trials\ndf.norm  <- subset(dfSubset2, select = c(\"Trial\",  \"Procedure.Trial.\", \"Subject\", \"Odor\", \"TMA\", \"Antag\"))\ndf.norm_melt  <- melt(df.norm, c(\"Trial\", \"Procedure.Trial.\", \"Subject\", \"Odor\"))\ndf.norm_scaled  <- ddply(df.norm_melt, .(Subject, variable), transform, valueScaled = scale(value)) #normalizes each separately using the scale function\n\n#adds the independent variables\nValveCode <- read.csv(\"Code/TMA Blocker Setup6/Valve_code.csv\", header=TRUE, sep=\",\", stringsAsFactors=TRUE)\ndf.merge  <- merge(df.norm_scaled, ValveCode)\n\n\n#end of old code\n########################################################################################################################\n\n#further subset data \nstatsdf <- subset(df.merge, variable == \"TMA\", select = c(\"Subject\", \"valueScaled\", \"TMA.Conc\", \"Block.ID\")) #includes only the fishy smell\n\n#statistical test\nstatsdf$TMA.Conc = factor(statsdf$TMA.Conc)\nfit <- aov( valueScaled ~Block.ID, data = statsdf)\nsummary(fit)\n#This isn't right... what do I want to test\n#I want to see if the amount of fishiness ratings varies by concentration of TMA across the two groups\nfit <- aov(valueScaled~TMA.Conc, data = statsdf)\nsummary(fit)\n\nfit <- aov(valueScaled~Block.ID*TMA.Conc, data = statsdf)\nsummary(fit)\n#This is giving us statistical significance... is that right?\nfit <- aov(valueScaled~Block.ID+TMA.Conc, data = statsdf)\nsummary(fit)\n\n#I should try a linear regression - I forget how to do this...\n\n#######################################################################################################################\n\n#Create a loop that pulls out 30 sets of data randomly from the 7 that we have\n#set working directory\nsetwd(\"/Volumes/mainland/Projects/TMA blocker/Setup6/\")\n\n#import data\nsubj <- sample(dir(path = \"Results/\", pattern=\"\\\\.txt$\", full.names=TRUE), 30, replace = TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim,stringsAsFactors=FALSE)\n\n##subsetdata to get rid of test mode and include only relevant columnss\ndfSubset  <- subset(df, Procedure.SubTrial. == \"RatingProc\", select = c (\"Subject\", \"Session\", \"DataFile.Basename\", \"Running.Block.\", \"Procedure.Block.\", \"Odor\", \"Trial\", \"Procedure.Trial.\", \"Procedure.SubTrial.\", \"OdorType.SubTrial.\", \"PleasantRating\", \"BlockRating\", \"TMARating\"))\ndfSubset2  <- dfSubset[c(-2:-5,-9:-10)]\n\n\n#convert scales\ndfSubset2$TMA  <- abs(as.integer(dfSubset2$TMARating)-400)\ndfSubset2$Antag  <- abs(as.integer(dfSubset2$BlockRating) - 400)\ndfSubset2$Pleasant  <- abs(as.integer(dfSubset2$PleasantRating) - 400)\n\n\n#normalize TMA and Block in each block of trials\ndf.norm  <- subset(dfSubset2, select = c(\"Trial\",  \"Procedure.Trial.\", \"Subject\", \"Odor\", \"TMA\", \"Antag\"))\ndf.norm_melt  <- melt(df.norm, c(\"Trial\", \"Procedure.Trial.\", \"Subject\", \"Odor\"))\ndf.norm_scaled  <- ddply(df.norm_melt, .(Subject, variable), transform, valueScaled = scale(value)) #normalizes each separately using the scale function\n\n#adds the independent variables\nValveCode <- read.csv(\"Code/TMA Blocker Setup6/Valve_code.csv\", header=TRUE, sep=\",\", stringsAsFactors=TRUE)\ndf.merge  <- merge(df.norm_scaled, ValveCode)\nstatsdf <- subset(df.merge, variable == \"TMA\", select = c(\"Subject\", \"valueScaled\", \"TMA.Conc\", \"Block.ID\")) #includes only the fishy smell\n\n\n\n#statistical tests\nfit <- aov(valueScaled~Block.ID +TMA.Conc, data = statsdf)\nsummary(fit)\n\n\n#write a loop around this and do it 100 times and then look at the distribution - but what part of the aov am I supposed to look at in the distrubtion?\n#Do I write a loop to increase the number of draws? no...\n\n#try a linear model then you can compare the difference in slopes? \nstatsdf$TMA.Conc <- as.integer(statsdf$TMA.Conc)\n\n\nfitNonenol <- lm(valueScaled~TMA.Conc, data = statsdf[which(statsdf$Block.ID == 'Green'),])\nsummary(fitNonenol)\n\nfitLinalool <- lm(valueScaled~TMA.Conc, data = statsdf[which(statsdf$Block.ID == \"Fruit_loop\"),])\nsummary(fitLinalool)\n\nfitNone <- lm(valueScaled~TMA.Conc, data = statsdf[which(statsdf$Block.ID == \"DEP\"),])\nsummary(fitNone)\n\n\nstatsdf$Block.ID <- factor(statsdf$Block.ID, levels = c(\"Fruit_loop\", \"Green\", \"DEP\"))\n\nfitAll <- lm(valueScaled~TMA.Conc+Block.ID, data = statsdf)\nsummary(fitAll)\n\n#### THIS IS IMPORTANT\nfitAll$fitted.values\n\n\n#plot the three linear models\npdf(\"TMABlocker_NaiveSubjectsn=7.pdf\")\nggplot(data =subset(df.merge, variable == \"TMA\"), aes(x = factor(TMA.Conc), y = valueScaled, colour = Block.ID)) +\n    geom_point() +\n    #facet_grid(variable2 ~.)+\n    xlab(\"[TMA] (mM)\") +\n    ylab(\"Normalized Ratings\")+\n    ggtitle(\"TMA Blocker Project Setup6 (n = 7)\") +\n    stat_smooth(aes(group = Block.ID), data = statsdf, method = \"lm\", se = FALSE)\ndev.off()  \n\n#what i really want to do is an ANCOVA which is apparently what I've been doing\ntest1 <-  aov(valueScaled~TMA.Conc*Block.ID, data= statsdf)\nsummary(test1)\ntest3 <- aov(valueScaled~TMA.Conc+Block.ID, data = statsdf)\nsummary(test3)\n\nanova(test1, test3) #tests whether models from test1 and 3 are significantly different\n\n#this is a similar test - they did it differently on the web...\ntest2 <- lm(valueScaled~Block.ID*TMA.Conc , data =statsdf)\nsummary(test2)\n",
    "created" : 1449259609743.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2376222733",
    "id" : "13AF0D9C",
    "lastKnownWriteTime" : 1443820188,
    "path" : "/Volumes/mainland-1/Projects/TMA blocker/Setup6/Code/TMA Blocker Setup6/StatsBootstrap.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "type" : "r_source"
}