{
    "contents" : "---\ntitle: \"SplitNostrilSetup1\"\noutput: html_document\n---\n\nThis is the original analysis from the Data collected from the Split Nostril Experiment. \n\n\n```{r}\n#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\n\n#set working directory\nsetwd(\"/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup1/\")\n#read in files\nsubj <- dir(path = \"Data/\", pattern=\"\\\\.txt$\", full.names=TRUE)#creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim, stringsAsFactors=FALSE)\n\n#### CLEAN THE DATAFILE ####\n#subsetdata to get rid of test mode and include only relevant columnss\ndfSubset  <- subset(df, Procedure.SubTrial. == \"RatingProc\", select = c (\"Subject\", \"Session\", \"Running.Block.\",  \"Trial\", \"Procedure.Trial.\", \"BlockRating.SubTrial.\", \"BlockRating\", \"TMARating.SubTrial.\", \"TMARating\", \"Straw1and2\", \"Straw3and4\", \"Jar1\", \"Jar2\", \"Jar3\", \"Jar4\"))\n#Something weird happened in the eprime program - this combines the two different variable columns used for ratings\nfor(i in 1:length(dfSubset$TMARating)){\n  if(is.na(dfSubset$TMARating[i])){\n    dfSubset$TMARating[i] <- dfSubset$TMARating.SubTrial.[i]\n    dfSubset$BlockRating[i] <- dfSubset$BlockRating.SubTrial.[i]\n    }\n  }\ndfSubset <- dfSubset[,c(-6,-8)]\n#Eliminates subjects who did poorly on the quiz (people who couldn't tell differentiate the odors well)\ndfSubset <- dfSubset[which(dfSubset$Subject != 2 & dfSubset$Subject != 3 & dfSubset$Subject !=7),]\n#CONVERT SCALES from computer setting to 0= low intensity, 350 = high intensity\ndfSubset$TMA  <- 401-as.integer(dfSubset$TMARating)\ndfSubset$Antag  <- 401 - as.integer(dfSubset$BlockRating)\n\ntest <- dfSubset[which(dfSubset$TMA < 0 | dfSubset$Antag <0),] #check this to make sure none of the values are negative\n#I changed the size of the allowable rectangle for clicks in the program, so the scale is not perfectly from 400 to 50 in pixel distance\n#This should not be a problem for the ratings because they are normalized in the next steps\n\n#import the information about the trials\nValveCode <- read.csv(\"Valve_code.csv\", header=TRUE, sep=\",\", stringsAsFactors=TRUE)\n#creates a column in the valve code to include which Block of trials it was (block 1 = nonenol; block2 = linalool)\nValveCode$Running.Block. <- NULL\nfor(i in 1:length(ValveCode$Trial)){\n  if(ValveCode$Block[i] == \"Nonenol\"){\n    ValveCode$Running.Block.[i] <- \"Test1\"\n  }\n  if(ValveCode$Block[i] == \"Linalool\"){\n    ValveCode$Running.Block.[i] <- \"Test2\"\n  }\n}\n#merge the subject data with the trial information - all trials were run in the same order, so the trials are merged by #which block it is and what trial number it was\ndf.merge  <- merge(dfSubset, ValveCode, c(\"Running.Block.\", \"Trial\"))\ndf.merge <- subset(df.merge, select = c(\"Subject\", \"TMA\", \"Antag\", \"Block\", \"Odor\", \"NostrilType\"))\ndf.melt <- melt(df.merge, c(\"Subject\", \"Block\", \"Odor\", \"NostrilType\"))\n\n#Raw data graphed by individuals (poor representation)\nggplot(data = subset(df.melt, variable == \"TMA\"), aes(x = Odor, y = value, colour = NostrilType)) +\n    geom_boxplot() +\n    facet_grid(Block~Subject)\n\n```\n\n\n```{r}\n#Normalize data by individual subject\nnormalizedData <- ddply(df.merge, .variables = c(\"Subject\", \"Block\"), transform, TMANorm = scale(TMA), antagNorm = scale(Antag))\n\n#melt normalized Data\nmelt.normalizedData <- melt(normalizedData, c(\"Subject\", \"Block\", \"Odor\", \"NostrilType\"))\n\n#plot normalized data - also hard to interpret\nggplot(data = normalizedData, aes(x = Odor, y = TMANorm, colour = NostrilType)) +\n  geom_boxplot() +\n  facet_grid(Block~.)\n\n```\n\n\nWe are interested in looking at the central versus peripheral blocking effect of each of the blockers. \nCentral effect = Fishy rating with TMA alone - fishy rating with TMA and block in different nostrils\nPeripheral effect = fishy rating with TMA and block in different nostrils - TMA + block in same nostril\ntotal blocking = fishy rating with TMA alone - fishy rating with TMA and block in same nostril (should be the addition of the central and peripheral blocking)\nThis next section calculates these values and graphs them - Here I presented only the normalized data. \nWe pick up with the normalizedData dataframe from the above section where the data have been normalized by Subject and block. \n\n```{r}\n#if we want it normalized - normalizedData comes from the Setup1Analysis\ncentralEffectAverage <- ddply(.data = normalizedData, .variables = c(\"Subject\", \"NostrilType\", \"Odor\", \"Block\"), .fun= summarize, avgTMA = mean(TMANorm))\ncentralEffect.cast <- dcast(centralEffectAverage, Subject~Block+NostrilType+Odor,  value.var = \"avgTMA\") #Each trial type was repeated 4x per person - this averages the normalized values across trial types\n#calculates the central and peripheral effects by individual subject from their average values\ncentralEffect.cast$centralNonenol <- centralEffect.cast$Nonenol_Alone_TMA - centralEffect.cast$Nonenol_Different_Both \ncentralEffect.cast$centralLinalool <- centralEffect.cast$Linalool_Alone_TMA - centralEffect.cast$Linalool_Different_Both\ncentralEffect.cast$perifNonenol <- centralEffect.cast$Nonenol_Different_Both - centralEffect.cast$Nonenol_Same_Both\ncentralEffect.cast$perifLinalool <- centralEffect.cast$Linalool_Different_Both - centralEffect.cast$Linalool_Same_Both\ncentralEffect.cast$totalBlockNonenol <- centralEffect.cast$Nonenol_Alone_TMA - centralEffect.cast$Nonenol_Same_Both\ncentralEffect.cast$totalBlockLinalool <- centralEffect.cast$Linalool_Alone_TMA - centralEffect.cast$Linalool_Same_Both\ncentralEffect.melt <- melt(centralEffect.cast, c(\"Subject\")) #tidy data\n\n##make the variables easier to graph (there's probably a better way to code this, and I am open to suggestions)\ntotalBlocking <- centralEffect.melt\nfor(i in 1:length(totalBlocking$Subject)){\n  if (totalBlocking$variable[i] %in% c(\"centralNonenol\", \"perifNonenol\", \"totalBlockNonenol\") ){\n    totalBlocking$whichBlocker[i] <- \"Nonenol\"\n  }\n  else if (totalBlocking$variable[i] %in% c(\"centralLinalool\", \"perifLinalool\", \"totalBlockLinalool\")){\n    totalBlocking$whichBlocker[i] <- \"Linalool\"\n  }\n  else\n    totalBlocking$whichBlocker[i] <- \"none\"\n  if (totalBlocking$variable[i] %in% c(\"centralNonenol\", \"centralLinalool\")){\n    totalBlocking$type[i] <- \"central\"\n  }\n  else if (totalBlocking$variable[i] %in% c(\"perifNonenol\", \"perifLinalool\")){\n    totalBlocking$type[i] <- \"peripheral\"\n  }\n  else if (totalBlocking$variable[i] %in% c(\"totalBlockNonenol\", \"totalBlockLinalool\")){\n    totalBlocking$type[i] <- \"total\"\n  }\n  else\n    totalBlocking$type[i] <- \"none\"\n  \n}\n#calculates the MEAN (its mislabeled) so we can makes sure the means on the graph add up\np_meds <- ddply(totalBlocking, .(type, whichBlocker), summarise, med = mean(value)) #med is actually calculating mean here\np_meds <- p_meds[which(p_meds$type != \"none\"),]\n\n#graph of everyone \nggplot(subset(totalBlocking, whichBlocker %in% c(\"Nonenol\", \"Linalool\")), aes(x = type , y = value, colour = whichBlocker)) +\n  geom_boxplot() +\n  #facet_grid(Subject~.)+\n  xlab(\"Type of Blocking\") +\n  ylab(\"Subject Difference in Rating of Fishy Intensity\") +\n  ggtitle(\"Split Nostril Setup1\")#+\n  #geom_text(data = p_meds, aes(x = type, y = med, label = med), size = 3, vjust = -1.5) #checking that the means of central and peripheral add up to the mean of total they do!\n```\n\nNow for some statistics\n```{r}\n#anova\nstats <- subset(totalBlocking, whichBlocker %in% c(\"Nonenol\", \"Linalool\"))\nfit <- aov(value ~type*whichBlocker, stats)\nsummary(fit)\n\n```\nThe anova shows that the type (or the type of blocking) is significantly different (which we expect) but whichBlocker (or the kind of block is not significantly different)\n\nI also ran t-tests on each individual type of blocking between the blockers to see if there was a difference. \n\n```{r}\n#t-test\nttestCentral <- t.test(value~whichBlocker, data = subset(stats, type == \"central\"))\nttestCentral #no significant difference in central\n\nttestPeripheral <- t.test(value~whichBlocker, data = subset(stats, type == \"peripheral\"))\nttestPeripheral #no significant difference in peripheral\n\nttestTotal <- t.test(value~whichBlocker, data = subset(stats, type == \"total\"))\nttestTotal #no significant difference in peripheral\n\n#this is not significant\n```\nSo its not significant, which isn't that surprising considering the variability. \n\n\n\n",
    "created" : 1449259892659.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3319900733",
    "id" : "76E635B5",
    "lastKnownWriteTime" : 1449261995,
    "path" : "/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup1/SplitNostrilSetup1.Rmd",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_markdown"
}