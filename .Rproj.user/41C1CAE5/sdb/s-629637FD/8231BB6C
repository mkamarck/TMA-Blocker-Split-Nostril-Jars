{
    "contents" : "---\ntitle: \"SplitNostrilJars2016AchemsGraph\"\noutput: html_document\n---\n\nThis is the code to re-create the graph made for Marissa Kamarck's AChemS's Poster from April 2016. \nThe data used was collected from a split nostril experiment testing trans-2-nonen-1-ol as an hTAAR5 antagonist. \nThe data was collected using a jar sniff method (setup1). \nThe graphed data plots the fishy intensity rated for each nostril type \nAlone = TMA alone + control in other nostril\ndifferent  = TMA in one nostril, antag in the other\nsame = TMA and antag in the same nostril\n\n```{r}\n#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\n\nsetwd(\"/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup1/\")\n\n#read all files from directory\nsubj <- dir(path = \"Data/\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim, stringsAsFactors=FALSE)\n\n#subsetdata to get rid of test mode and include only relevant columnss\ndfSubset  <- subset(df, Procedure.SubTrial. == \"RatingProc\", select = c (\"Subject\", \"Session\", \"Running.Block.\",  \"Trial\", \"Procedure.Trial.\", \"BlockRating.SubTrial.\", \"BlockRating\", \"TMARating.SubTrial.\", \"TMARating\", \"Straw1and2\", \"Straw3and4\", \"Jar1\", \"Jar2\", \"Jar3\", \"Jar4\"))\n#Combine the weird thing that's happening with the two different columns for rating...\nfor(i in 1:length(dfSubset$TMARating)){\n  if(is.na(dfSubset$TMARating[i])){\n    dfSubset$TMARating[i] <- dfSubset$TMARating.SubTrial.[i]\n    dfSubset$BlockRating[i] <- dfSubset$BlockRating.SubTrial.[i]\n    }\n  }\n\ndfSubset <- subset(dfSubset, select = -c(TMARating.SubTrial.,BlockRating.SubTrial.))\n\n#get rid of participants from lab\ndfSubset <- dfSubset[which(dfSubset$Subject != 2 & dfSubset$Subject != 3 & dfSubset$Subject !=7),]\n#cONVErT SCALES\ndfSubset$TMA  <- 401-as.integer(dfSubset$TMARating)\ndfSubset$Antag  <- 401 - as.integer(dfSubset$BlockRating)\n\n#delete function\ndelete.na <- function(df, n=0) {\n  log <- apply(df, 2, is.na)\n  logindex <- apply(log, 1, function(x) sum(x) <= n)\n  df[logindex, ]\n}\ndfSubset <- delete.na(dfSubset) #remove missing values\n\nValveCode <- read.csv(\"Valve_code.csv\", header=TRUE, sep=\",\", stringsAsFactors=TRUE)\n\nValveCode$Running.Block. <- NULL\nfor(i in 1:length(ValveCode$Trial)){\n  if(ValveCode$Block[i] == \"Nonenol\"){\n    ValveCode$Running.Block.[i] <- \"Test1\"\n  }\n  if(ValveCode$Block[i] == \"Linalool\"){\n    ValveCode$Running.Block.[i] <- \"Test2\"\n  }\n}\n\nValveCode2 <- subset(ValveCode, select = -c(TMALeftRight))\n\ndf.merge  <- merge(dfSubset, ValveCode2, c(\"Running.Block.\", \"Trial\"))\ndf.merge <- subset(df.merge, select = c(\"Subject\", \"TMA\", \"Antag\", \"Block\", \"Odor\", \"NostrilType\"))\ndf.melt <- melt(df.merge, c(\"Subject\", \"Block\", \"Odor\", \"NostrilType\"))\nwrite.table(df.merge, \"dfmerge.txt\") #This was the data that was exported for Sianneh to work with to graph individual participants\n\n```\n\nNow, data are normalized and graphed.\n\n```{r}\nrange01 <- function(x){(x-min(x))/(max(x)-min(x))}\nnormalizedData <- ddply(df.merge, .variables = c(\"Subject\"), transform, TMANorm = range01(TMA), antagNorm = range01(Antag))\n\n#normalize data\navgnorm <- ddply(.data = normalizedData, .variables = c(\"Subject\", \"NostrilType\", \"Odor\", \"Block\"), .fun= summarize, avgTMA = mean(TMANorm), stdev = sd(TMANorm), sterr = stdev/sqrt(4))\npureavg <- ddply(.data = avgnorm, .variables = c(\"NostrilType\", \"Odor\", \"Block\"), .fun = summarize, avgTMA2 = mean(avgTMA), stdev = sd(avgTMA), sterr = sd(avgTMA)/2)\n```\n\nThis is the graph used for the AChemS poster plotting fishy intensity in the different scenarios. There are extra error bars on the 'alone' - ignore them.  \n```{r}\n#devSVG(\"splitnostrilgraph2.svg\")\nggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_grid(.~Block) + \n  geom_errorbar(data = pureavg, position = \"dodge\", stat = \"identity\", aes(ymin = avgTMA2 - sterr, ymax = avgTMA2 + sterr))\n#dev.off()\n```\nWe also plotted intensity ratings for the different odors in the experiment:\n```{r}\n#jar intensity balance graph\navgnormAntag <- ddply(.data = normalizedData, .variables = c(\"Subject\", \"NostrilType\", \"Odor\", \"Block\"), .fun= summarize, avgAntag = mean(antagNorm), stdev = sd(antagNorm))\npureavgAntag <- ddply(.data = avgnormAntag, .variables = c(\"NostrilType\", \"Odor\", \"Block\"), .fun = summarize, avgAntag2 = mean(avgAntag), stdev = sd(avgAntag), sterr = sd(avgAntag)/2)\nantagsub <- subset(pureavgAntag, NostrilType == \"Alone\" & Odor != \"TMA\") \nnames(antagsub) <- c(\"NostrilType\", \"Odor\", \"Block\",  \"Intensity\", \"stdev\", \"sterr\")\ntmasub <- subset(pureavg, NostrilType == \"Alone\" & Odor == \"TMA\")\nnames(tmasub) <-  c(\"NostrilType\", \"Odor\", \"Block\",  \"Intensity\", \"stdev\", \"sterr\")\ntogether <- rbind(tmasub, antagsub)\ntogether$Odor <- factor(together$Odor, levels = c(\"TMA\", \"Non\", \"Lin\"))\n\n\n#devSVG(\"/Volumes/mainland/Projects/TMA blocker/Poster/splitnostrilgraphIntensity.svg\")\nggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_errorbar(data = together, position = \"dodge\", stat = \"identity\", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))\n#dev.off()\n```\n\n",
    "created" : 1467392692621.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "145216720",
    "id" : "8231BB6C",
    "lastKnownWriteTime" : 1467914422,
    "path" : "/Volumes/storage/mainland/Projects/TMA blocker/Split Nostril Study/Setup1/Code/SplitNostrilJars2016AChemSGraph.Rmd",
    "project_path" : "SplitNostrilJars2016AChemSGraph.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 12,
    "source_on_save" : false,
    "type" : "r_markdown"
}