{
    "contents" : "#Taking an approach to the data to see how many subjects have a central block and how many have a peripheral block etc. \n#Specifically ones that are different between linalool and TMA\n#start with df.merge from SplitNostril Setup1.R\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(reshape2)\n\n#function to delete a certain amount of nas\ndelete.na <- function(df, n=0) {\n  log <- apply(df, 2, is.na)\n  logindex <- apply(log, 1, function(x) sum(x) <= n)\n  df[logindex, ]\n}\ndf.merge <- delete.na(df.merge)\n\n#try new way of normalizingdata - noramlizes data between 0 and 1 - use this\nrange01 <- function(x){(x-min(x))/(max(x)-min(x))}\nnormalizedData <- ddply(df.merge, .variables = c(\"Subject\", \"Block\"), transform, TMANorm = range01(TMA), antagNorm = range01(Antag))\n#Get a database that just has the both in different noses and the TMA\n#centralEffect <- df.merge[which((df.merge$NostrilType == \"Alone\" & df.merge$Odor == \"TMA\" )| df.merge$NostrilType == \"Different\"),]\n#get average across trials\n#this is for non-normalized data\n#write.table(df.merge, file = \"CleanedSetup1Data\", sep =\"\\t\")\n#write.table(normalizedData, file = \"NormalizedCleanedSetup1Data\", sep = \"\\t\")\n\ncentralEffectAverage <- ddply(.data = df.merge, .variables = c(\"Subject\", \"NostrilType\", \"Odor\", \"Block\"), .fun= summarize, avgTMA = mean(TMA))\n\n# #if we want it normalized - normalizedData comes from the Setup1Analysis\n# centralEffectAverage <- ddply(.data = normalizedData, .variables = c(\"Subject\", \"NostrilType\", \"Odor\", \"Block\"), .fun= summarize, avgTMA = mean(TMANorm))\n\n#if we want it normalized - normalizedData comes from the Setup1Analysis\ncentralEffectAverage <- ddply(.data = normalizedData, .variables = c(\"Subject\", \"NostrilType\", \"Odor\", \"Block\"), .fun= summarize, avgTMA = mean(TMANorm))\n\n#Average across replicates\n#For each subject calculate: TMA Alone-different\nblockingDifferences <- ddply(centralEffectAverage, .(Subject,Block),function(x) c(CentralBlock=(subset(x,Odor==\"TMA\")$avgTMA-subset(x,NostrilType==\"Different\")$avgTMA)*1, PeripheralBlock=(subset(x,NostrilType==\"Different\")$avgTMA-subset(x,NostrilType==\"Same\")$avgTMA)*1,TotalBlock=(subset(x,Odor==\"TMA\")$avgTMA-subset(x,NostrilType==\"Same\")$avgTMA*1)))\n#blockingDifferences <- blockingDifferences[3:5]+1\n\nblockingDifferences.melt <- melt(blockingDifferences,id=c(\"Subject\",\"Block\"))\n\nggplot(blockingDifferences.melt,aes(y=value,x=variable,color=Block))+geom_boxplot()\n\n#this graph just makes it so that instead of blocking going up on the y axis, the more blocking, the lower it is, like the rest of our graphs\nblockingDifferences.inhibition <- ddply(centralEffectAverage, .(Subject,Block),function(x) c(CentralBlock=subset(x,NostrilType==\"Different\")$avgTMA-subset(x,Odor==\"TMA\")$avgTMA+1, PeripheralBlock=subset(x,NostrilType==\"Same\")$avgTMA-subset(x,NostrilType==\"Different\")$avgTMA+1,TotalBlock=subset(x,NostrilType==\"Same\")$avgTMA-subset(x,Odor==\"TMA\")$avgTMA+1))\nblockingDifferences.inhibition.melt <- melt(blockingDifferences.inhibition, id = c(\"Subject\", \"Block\"))\n\n#blockingDifferences.inhibition.melt$Block <- factor(blockingDifferences.inhibition.melt$Block, levels = c(\"Linalool\", \"Nonenol\"), labels = c(\"Linalool\", \"Trans-2-Nonen-1-ol\"))\npdf(\"SplitNostrilforPatent_BW.pdf\")\nLegend_title = \"Test Odor\"\nggplot(subset(blockingDifferences.inhibition.melt, variable %in% c(\"CentralBlock\", \"PeripheralBlock\")), aes(y= value, x=variable, fill = Block)) +\n  geom_boxplot() +\n  xlab(\"Type of Block\") +\n  ylab(\"Normalized Fishy Intensity\") +\n  geom_hline(y = 1) +\n  geom_hline(y = 0) +\n  theme_bw() +\n  scale_fill_grey(start = .3, end = 0.9, Legend_title) +\n  theme(legend.text = element_text(size = 20)) +\n  theme(legend.title = element_text(size = 22, face = \"bold\")) +\n  theme(legend.justification=c(0,1), legend.position=c(0,.3)) +\n  theme(axis.title.x = element_text(face=\"bold\", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = \"black\")) +\n  theme(axis.title.y = element_text(face=\"bold\", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = \"black\")) +\n  theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = \"grey\"), panel.grid.major.x = element_line(colour = \"grey\"))\n   \ndev.off()\n\n\n###Attempting to create a graph that makes more sense - here I want to use unnormalized data that i will normalize by making into a percent of TMA by itself. \ncentralEffectAverage <- ddply(.data = df.merge, .variables = c(\"Subject\", \"NostrilType\", \"Odor\", \"Block\"), .fun= summarize, avgTMA = mean(TMA))\n#blockingDifferences.percent <- ddply(centralEffectAverage, .(Subject,Block),function(x) c(CentralBlock=(subset(x,NostrilType==\"Different\")$avgTMA-subset(x,Odor==\"TMA\")$avgTMA)/subset(x, Odor == \"TMA\")$avgTMA*100, PeripheralBlock=(subset(x,NostrilType==\"Same\")$avgTMA-subset(x,NostrilType==\"Different\")$avgTMA)/subset(x, Odor == \"TMA\")$avgTMA*100,TotalBlock=(subset(x,NostrilType==\"Same\")$avgTMA-subset(x,Odor==\"TMA\")$avgTMA)/subset(x, Odor == \"TMA\")$avgTMA*100))\n#blockingDifferences.percent.melt <- melt(blockingDifferences.percent,id=c(\"Subject\",\"Block\"))\nblockingDifferences.percent <- ddply(centralEffectAverage, .(Subject,Block),function(x) c(CentralBlock=subset(x,NostrilType==\"Different\")$avgTMA/subset(x, Odor == \"TMA\")$avgTMA*100, PeripheralBlock=(subset(x,NostrilType==\"Same\")$avgTMA-subset(x,NostrilType==\"Different\")$avgTMA+1)/subset(x, Odor == \"TMA\")$avgTMA*100,TotalBlock=subset(x,NostrilType==\"Same\")$avgTMA/subset(x, Odor == \"TMA\")$avgTMA*100))\nblockingDifferences.percent.melt <- melt(blockingDifferences.percent,id=c(\"Subject\",\"Block\"))\nggplot(blockingDifferences.percent.melt, aes(y= value, x=variable, color = Block)) +\n  geom_boxplot() +\n  xlab(\"Type of Block\") +\n  ylab(\"Change in Fishy Intensity\")\n\n\n# centralEffect.cast <- dcast(centralEffectAverage, Subject~Block+NostrilType+Odor,  value.var = \"avgTMA\")\n# centralEffect.cast$centralNonenol <- centralEffect.cast$Nonenol_Alone_TMA - centralEffect.cast$Nonenol_Different_Both \n# centralEffect.cast$centralLinalool <- centralEffect.cast$Linalool_Alone_TMA - centralEffect.cast$Linalool_Different_Both\n# centralEffect.cast$perifNonenol <- centralEffect.cast$Nonenol_Different_Both - centralEffect.cast$Nonenol_Same_Both\n# centralEffect.cast$perifLinalool <- centralEffect.cast$Linalool_Different_Both - centralEffect.cast$Linalool_Same_Both\n# centralEffect.cast$totalBlockNonenol <- centralEffect.cast$Nonenol_Alone_TMA - centralEffect.cast$Nonenol_Same_Both\n# centralEffect.cast$totalBlockLinalool <- centralEffect.cast$Linalool_Alone_TMA - centralEffect.cast$Linalool_Same_Both\n# centralEffect.melt <- melt(centralEffect.cast, c(\"Subject\"))\n# \n# ggplot(subset(centralEffect.melt, variable %in% c(\"centralNonenol\", \"centralLinalool\", \"perifNonenol\", \"perifLinalool\", \"totalBlockNonenol\", \"totalBlockLinalool\")), aes(x = variable, y = value, fill = variable))+\n#   geom_bar(stat = \"identity\", position = \"dodge\") +\n#   facet_grid(.~Subject) +\n#   ggtitle(\"Percent difference in thingies\")\n# \n# \n# ggplot(subset(centralEffect.melt, variable %in% c(\"centralNonenol\", \"centralLinalool\", \"perifNonenol\", \"perifLinalool\", \"totalBlockNonenol\", \"totalBlockLinalool\")), aes(x = variable, y = value, fill = variable))+\n#   geom_boxplot()+\n#   ggtitle(\"Difference between fishy and everything\")\n# \n# #make the variables easier to graph\n# totalBlocking <- centralEffect.melt\n# for(i in 1:length(totalBlocking$Subject)){\n#   if (totalBlocking$variable[i] %in% c(\"centralNonenol\", \"perifNonenol\", \"totalBlockNonenol\") ){\n#     totalBlocking$whichBlocker[i] <- \"Nonenol\"\n#   }\n#   else if (totalBlocking$variable[i] %in% c(\"centralLinalool\", \"perifLinalool\", \"totalBlockLinalool\")){\n#     totalBlocking$whichBlocker[i] <- \"Linalool\"\n#   }\n#   else\n#     totalBlocking$whichBlocker[i] <- \"none\"\n#   if (totalBlocking$variable[i] %in% c(\"centralNonenol\", \"centralLinalool\")){\n#     totalBlocking$type[i] <- \"central\"\n#   }\n#   else if (totalBlocking$variable[i] %in% c(\"perifNonenol\", \"perifLinalool\")){\n#     totalBlocking$type[i] <- \"peripheral\"\n#   }\n#   else if (totalBlocking$variable[i] %in% c(\"totalBlockNonenol\", \"totalBlockLinalool\")){\n#     totalBlocking$type[i] <- \"total\"\n#   }\n#   else\n#     totalBlocking$type[i] <- \"none\"\n#   \n# }\n\np_meds <- ddply(totalBlocking, .(type, whichBlocker), summarise, med = mean(value)) #med is actually calculating mean here\np_meds <- p_meds[which(p_meds$type != \"none\"),]\n\n#pdf(\"/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup1/SummaryPerifvCentralwo237NormalizedIndiv.pdf\")\nggplot(subset(totalBlocking, whichBlocker %in% c(\"Nonenol\", \"Linalool\")), aes(x = type , y = value, colour = whichBlocker)) +\n  geom_boxplot() +\n  #facet_grid(Subject~.)+\n  xlab(\"Type of Blocking\") +\n  ylab(\"Subject Difference in Rating of Fishy Intensity\") +\n  ggtitle(\"Split Nostril Setup1\")+\n  geom_text(data = p_meds, aes(x = type, y = med, label = med), size = 3, vjust = -1.5) #checking that the means of central and peripheral add up to the mean of total they do!\n#dev.off()\n\n#want to run t-test on these to see if each individual person is significantly blocking centrally\n#Also want to look at graph of percent difference - this is probably a better way to normalize things. \n\n#run an anova on this...\nstats <- subset(totalBlocking, whichBlocker %in% c(\"Nonenol\", \"Linalool\"))\nfit <- aov(value ~variable, stats)\nsummary(fit)\n\nfit <- aov(value ~type*whichBlocker, stats)\nsummary(fit)\n\nttestCentral <- t.test(value~whichBlocker, data = subset(stats, type == \"central\"))\nttestCentral #no significant difference in central\n\nttestPeripheral <- t.test(value~whichBlocker, data = subset(stats, type == \"peripheral\"))\nttestPeripheral #no significant difference in peripheral\n\nttestTotal <- t.test(value~whichBlocker, data = subset(stats, type == \"total\"))\nttestTotal #no significant difference in peripheral\n\n#this is not significant",
    "created" : 1449522482790.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2023520221",
    "id" : "66E8CD02",
    "lastKnownWriteTime" : 1454100886,
    "path" : "/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup1/Code/CentralPeriphApproach.R",
    "project_path" : "CentralPeriphApproach.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}