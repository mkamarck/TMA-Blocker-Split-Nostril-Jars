theme(legend.justification=c(0,1), legend.position=c(.75,.5)) +
theme(axis.title.x = element_text(face="bold", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = "black")) +
theme(axis.title.y = element_text(face="bold", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = "black")) +
theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = "grey"), panel.grid.major.x = element_line(colour = "grey"))
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock")), aes(y= value, x=variable, fill = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
geom_hline(y = 1) +
geom_hline(y = 0) +
theme_bw() +
scale_fill_grey(start = .3, end = 0.9, Legend_title) +
theme(legend.text = element_text(size = 20)) +
theme(legend.title = element_text(size = 22, face = "bold")) +
theme(legend.justification=c(0,1), legend.position=c(.75,.3)) +
theme(axis.title.x = element_text(face="bold", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = "black")) +
theme(axis.title.y = element_text(face="bold", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = "black")) +
theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = "grey"), panel.grid.major.x = element_line(colour = "grey"))
pdf("SplitNostrilforPatent_BW.pdf")
Legend_title = "Test Odor"
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock")), aes(y= value, x=variable, fill = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
geom_hline(y = 1) +
geom_hline(y = 0) +
theme_bw() +
scale_fill_grey(start = .3, end = 0.9, Legend_title) +
theme(legend.text = element_text(size = 20)) +
theme(legend.title = element_text(size = 22, face = "bold")) +
theme(legend.justification=c(0,1), legend.position=c(.75,.3)) +
theme(axis.title.x = element_text(face="bold", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = "black")) +
theme(axis.title.y = element_text(face="bold", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = "black")) +
theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = "grey"), panel.grid.major.x = element_line(colour = "grey"))
dev.off()
getwd()
blockingDifferences.inhibition.melt$Block <- factor(blockingDifferences.inhibition.melt$Block, levels = c("Linalool", "Nonenol"), labels = c("Linalool", "Trans-2-Nonen-1-ol"))
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock")), aes(y= value, x=variable, fill = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
geom_hline(y = 1) +
geom_hline(y = 0) +
theme_bw() +
scale_fill_grey(start = .3, end = 0.9, Legend_title) +
theme(legend.text = element_text(size = 20)) +
theme(legend.title = element_text(size = 22, face = "bold")) +
theme(legend.justification=c(0,1), legend.position=c(.70,.3)) +
theme(axis.title.x = element_text(face="bold", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = "black")) +
theme(axis.title.y = element_text(face="bold", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = "black")) +
theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = "grey"), panel.grid.major.x = element_line(colour = "grey"))
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock")), aes(y= value, x=variable, fill = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
geom_hline(y = 1) +
geom_hline(y = 0) +
theme_bw() +
scale_fill_grey(start = .3, end = 0.9, Legend_title) +
theme(legend.text = element_text(size = 20)) +
theme(legend.title = element_text(size = 22, face = "bold")) +
theme(legend.justification=c(0,1), legend.position=c(0,.3)) +
theme(axis.title.x = element_text(face="bold", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = "black")) +
theme(axis.title.y = element_text(face="bold", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = "black")) +
theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = "grey"), panel.grid.major.x = element_line(colour = "grey"))
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock")), aes(y= value, x=variable, fill = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
geom_hline(y = 1) +
geom_hline(y = 0) +
theme_bw() +
scale_fill_grey(start = .3, end = 0.9, Legend_title) +
theme(legend.text = element_text(size = 20)) +
theme(legend.title = element_text(size = 22, face = "bold")) +
theme(legend.justification=c(0,1), legend.position=c(0,.3)) +
theme(axis.title.x = element_text(face="bold", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = "black")) +
theme(axis.title.y = element_text(face="bold", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = "black")) +
theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = "grey"), panel.grid.major.x = element_line(colour = "grey"))
dev.off()
pdf("SplitNostrilforPatent_BW.pdf")
Legend_title = "Test Odor"
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock")), aes(y= value, x=variable, fill = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
geom_hline(y = 1) +
geom_hline(y = 0) +
theme_bw() +
scale_fill_grey(start = .3, end = 0.9, Legend_title) +
theme(legend.text = element_text(size = 20)) +
theme(legend.title = element_text(size = 22, face = "bold")) +
theme(legend.justification=c(0,1), legend.position=c(0,.3)) +
theme(axis.title.x = element_text(face="bold", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = "black")) +
theme(axis.title.y = element_text(face="bold", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = "black")) +
theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = "grey"), panel.grid.major.x = element_line(colour = "grey"))
dev.off()
pdf("SplitNostrilforPatent_BW.pdf")
Legend_title = "Test Odor"
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock")), aes(y= value, x=variable, fill = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
geom_hline(y = 1) +
geom_hline(y = 0) +
theme_bw() +
scale_fill_grey(start = .3, end = 0.9, Legend_title) +
theme(legend.text = element_text(size = 20)) +
theme(legend.title = element_text(size = 22, face = "bold")) +
theme(legend.justification=c(0,1), legend.position=c(0,.3)) +
theme(axis.title.x = element_text(face="bold", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = "black")) +
theme(axis.title.y = element_text(face="bold", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = "black")) +
theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = "grey"), panel.grid.major.x = element_line(colour = "grey"))
dev.off()
library(ggplot2)
library(plyr)
library(reshape2)
#function to delete a certain amount of nas
delete.na <- function(df, n=0) {
log <- apply(df, 2, is.na)
logindex <- apply(log, 1, function(x) sum(x) <= n)
df[logindex, ]
}
df.merge <- delete.na(df.merge)
#try new way of normalizingdata - noramlizes data between 0 and 1 - use this
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
normalizedData <- ddply(df.merge, .variables = c("Subject", "Block"), transform, TMANorm = range01(TMA), antagNorm = range01(Antag))
#Get a database that just has the both in different noses and the TMA
#centralEffect <- df.merge[which((df.merge$NostrilType == "Alone" & df.merge$Odor == "TMA" )| df.merge$NostrilType == "Different"),]
#get average across trials
#this is for non-normalized data
#write.table(df.merge, file = "CleanedSetup1Data", sep ="\t")
#write.table(normalizedData, file = "NormalizedCleanedSetup1Data", sep = "\t")
centralEffectAverage <- ddply(.data = df.merge, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMA))
# #if we want it normalized - normalizedData comes from the Setup1Analysis
# centralEffectAverage <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMANorm))
#if we want it normalized - normalizedData comes from the Setup1Analysis
centralEffectAverage <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMANorm))
#Average across replicates
#For each subject calculate: TMA Alone-different
blockingDifferences <- ddply(centralEffectAverage, .(Subject,Block),function(x) c(CentralBlock=(subset(x,Odor=="TMA")$avgTMA-subset(x,NostrilType=="Different")$avgTMA)*1, PeripheralBlock=(subset(x,NostrilType=="Different")$avgTMA-subset(x,NostrilType=="Same")$avgTMA)*1,TotalBlock=(subset(x,Odor=="TMA")$avgTMA-subset(x,NostrilType=="Same")$avgTMA*1)))
#blockingDifferences <- blockingDifferences[3:5]+1
blockingDifferences.melt <- melt(blockingDifferences,id=c("Subject","Block"))
ggplot(blockingDifferences.melt,aes(y=value,x=variable,color=Block))+geom_boxplot()
#this graph just makes it so that instead of blocking going up on the y axis, the more blocking, the lower it is, like the rest of our graphs
blockingDifferences.inhibition <- ddply(centralEffectAverage, .(Subject,Block),function(x) c(CentralBlock=subset(x,NostrilType=="Different")$avgTMA-subset(x,Odor=="TMA")$avgTMA+1, PeripheralBlock=subset(x,NostrilType=="Same")$avgTMA-subset(x,NostrilType=="Different")$avgTMA+1,TotalBlock=subset(x,NostrilType=="Same")$avgTMA-subset(x,Odor=="TMA")$avgTMA+1))
blockingDifferences.inhibition.melt <- melt(blockingDifferences.inhibition, id = c("Subject", "Block"))
#blockingDifferences.inhibition.melt$Block <- factor(blockingDifferences.inhibition.melt$Block, levels = c("Linalool", "Nonenol"), labels = c("Linalool", "Trans-2-Nonen-1-ol"))
#pdf("SplitNostrilforPatent_BW.pdf")
Legend_title = "Test Odor"
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock")), aes(y= value, x=variable, fill = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
geom_hline(y = 1) +
geom_hline(y = 0) +
theme_bw() +
scale_fill_grey(start = .3, end = 0.9, Legend_title) +
theme(legend.text = element_text(size = 20)) +
theme(legend.title = element_text(size = 22, face = "bold")) +
theme(legend.justification=c(0,1), legend.position=c(0,.3)) +
theme(axis.title.x = element_text(face="bold", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = "black")) +
theme(axis.title.y = element_text(face="bold", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = "black")) +
theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = "grey"), panel.grid.major.x = element_line(colour = "grey"))
#dev.off()
Legend_title = "Test Odor"
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock")), aes(y= value, x=variable, fill = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
geom_hline(y = 1) +
geom_hline(y = 0) +
theme_bw() +
scale_fill_grey(start = .3, end = 0.9, Legend_title) +
theme(legend.text = element_text(size = 20)) +
theme(legend.title = element_text(size = 22, face = "bold")) +
theme(legend.justification=c(0,1), legend.position=c(0,.3)) +
theme(axis.title.x = element_text(face="bold", size=22),axis.text.x  = element_text(vjust=0.5, size=18, colour = "black")) +
theme(axis.title.y = element_text(face="bold", size=22),axis.text.y  = element_text(vjust=0.5, size=10, colour = "black")) +
theme(panel.grid.minor=element_blank(), panel.grid.major.y = element_line(colour = "grey"), panel.grid.major.x = element_line(colour = "grey"))+
facet_grid(Subject~.)
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock", "totalBlock")), aes(y= value, x=variable, colour = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
)
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock", "totalBlock")), aes(y= value, x=variable, colour = Block)) +
geom_boxplot() +
xlab("Type of Block") +
ylab("Normalized Fishy Intensity")
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock", "totalBlock")), aes(y= value, x=variable, colour = Block)) +
#geom_boxplot() +
geom_point()
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
facet_grid(Subject~.)
facet_grid(Subject~.)
#######################
ggplot(subset(blockingDifferences.inhibition.melt, variable %in% c("CentralBlock", "PeripheralBlock", "totalBlock")), aes(y= value, x=variable, colour = Block)) +
#geom_boxplot() +
geom_point()+
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
facet_grid(Subject~.)
ggplot(blockingDifferences.inhibition.melt, aes(y= value, x=variable, colour = Block)) +
#geom_boxplot() +
geom_point()+
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
facet_grid(Subject~.)
centralEffectAverage <- ddply(.data = df.merge, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMA))
ggplot(centralEffectAverage, aes(y= value, x=variable, colour = Block)) +
#geom_boxplot() +
geom_point()+
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
facet_grid(Subject~.)
View(centralEffectAverage)
ggplot(centralEffectAverage, aes(y= TMAavg, x=Block, colour = Odor)) +
#geom_boxplot() +
geom_point()+
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
facet_grid(Subject~NostrilType)
ggplot(centralEffectAverage, aes(y= TMAAvg, x=Block, colour = Odor)) +
#geom_boxplot() +
geom_point()+
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
facet_grid(Subject~NostrilType)
ggplot(centralEffectAverage, aes(y= avgTMA, x=Block, colour = Odor)) +
#geom_boxplot() +
geom_point()+
xlab("Type of Block") +
ylab("Normalized Fishy Intensity") +
facet_grid(Subject~NostrilType)
centralEffectAverage <- ddply(.data = df.merge, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMA))
library(ddply)
library(plyr)
library(ggplot2)
library(reshape2)
centralEffectAverage <- ddply(.data = df.merge, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMA))
View(centralEffectAverage)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
normalizedData <- ddply(df.merge, .variables = c("Subject", "Block"), transform, TMANorm = range01(TMA), antagNorm = range01(Antag))
View(normalizedData)
View(normalizedData)
ggplot(normalizedData, aes(x = NostrilType, y = TMANorm, colour = Block)) +
geom_point
ggplot(normalizedData, aes(x = NostrilType, y = TMANorm, colour = Block)) +
geom_boxplot()
ggplot(normalizedData, aes(x = NostrilType, y = TMANorm, fill = Block)) +
geom_bar()
ggplot(normalizedData, aes(x = NostrilType, y = TMANorm, fill = Block)) +
geom_bar(stat = "mean")
geom_bar
?geom_bar
ggplot(normalizedData, aes(x = NostrilType, y = TMANorm, fill = Block)) +
geom_bar(stat = "identity")
ggplot(normalizedData, aes(x = NostrilType, y = TMANorm, fill = Block)) +
geom_bar(stat = "identity", position = "dodge")
ggplot(normalizedData, aes(x = NostrilType, y = TMANorm, fill = Block)) +
geom_bar(stat = "average", position = "dodge")
ggplot(centralEffectAverage, aes(x = NostrilType, y = TMANorm, fill = Block)) +
geom_bar(stat = "average", position = "dodge")
ggplot(centralEffectAverage, aes(x = NostrilType, y = TMANorm, fill = Block)) +
geom_bar(stat = "identity", position = "dodge")
ggplot(centralEffectAverage, aes(x = NostrilType, y = avgTMA, fill = Block)) +
geom_bar(stat = "identity", position = "dodge")
avgnorm <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMANorm))
ggplot(avgnorm, aes(x = NostrilType, y = avgTMA, fill = Block)) +
geom_bar(stat = "identity", position = "dodge")
?sd
avgnorm <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMANorm), stdev = sd(TMANorm), sterr = sd/sqrt(4))
avgnorm <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMANorm), stdev = sd(TMANorm), sterr = stdev/sqrt(4))
)
d
d
d
d
d
View(avgnorm)
?errorbar
pureavg <- ddply(.data = avgnorm, .variables = c("NostrilType", "Odor", "Block"), .fun = summarize, avgTMA2 = mean(avgTMA), stdev = sd(avgTMA), sterr = sd(avgTMA)/2)
ggplot(pureavg, aes(x = NostrilType, y = avgTMA, fill = Block)) +
geom_bar(stat = "identity", position = "dodge")
ggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge")
?errorbar
?error_bar
?geom_errorbar
ggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~Block) +
geom_errorbar(position = "dodge", stat = "identity")
ggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~Block) +
geom_errorbar(position = "dodge", stat = "identity", ymin = sterr, ymax = sterr)
View(pureavg)
?geom_errorbar
ggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~Block) +
geom_errorbar(data = pureavg, position = "dodge", stat = "identity", aes(ymin = avgTMA2 - sterr, ymax = avgTMA2 + sterr))
library(RSvgDevice)
?RSvgDevice
?svg
devSVG("splitnostrilgraph.svg")
ggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~Block) +
geom_errorbar(data = pureavg, position = "dodge", stat = "identity", aes(ymin = avgTMA2 - sterr, ymax = avgTMA2 + sterr))
dev.off()
avgnorm <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor"), .fun= summarize, avgTMA = mean(TMANorm), stdev = sd(TMANorm), sterr = stdev/sqrt(4))
View(avgnorm)
normalizedData <- ddply(df.merge, .variables = c("Subject"), transform, TMANorm = range01(TMA), antagNorm = range01(Antag))
avgnorm <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMANorm), stdev = sd(TMANorm), sterr = stdev/sqrt(4))
View(avgnorm)
ggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~Block) +
geom_errorbar(data = pureavg, position = "dodge", stat = "identity", aes(ymin = avgTMA2 - sterr, ymax = avgTMA2 + sterr))
pureavg <- ddply(.data = avgnorm, .variables = c("NostrilType", "Odor", "Block"), .fun = summarize, avgTMA2 = mean(avgTMA), stdev = sd(avgTMA), sterr = sd(avgTMA)/2)
#devSVG("splitnostrilgraph2.svg")
ggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~Block) +
geom_errorbar(data = pureavg, position = "dodge", stat = "identity", aes(ymin = avgTMA2 - sterr, ymax = avgTMA2 + sterr))
devSVG("splitnostrilgraph2.svg")
ggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~Block) +
geom_errorbar(data = pureavg, position = "dodge", stat = "identity", aes(ymin = avgTMA2 - sterr, ymax = avgTMA2 + sterr))
dev.off()
avgnormAntag <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgAntag = mean(antagNorm), stdev = sd(antagNorm), sterr = antag/sqrt(4))
avgnormAntag <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgAntag = mean(antagNorm), stdev = sd(antagNorm), sterr = antag/sqrt(4))
library(plyr)
library(ggplot2)
library(reshape2)
avgnormAntag <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgAntag = mean(antagNorm), stdev = sd(antagNorm), sterr = antag/sqrt(4))
pureavgAntag <- ddply(.data = avgnormAntag, .variables = c("NostrilType", "Odor", "Block"), .fun = summarize, avgAntag2 = mean(avgAntag), stdev = sd(avgAntag), sterr = sd(avgAntag)/2)
avgnormAntag <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgAntag = mean(antagNorm), stdev = sd(antagNorm), sterr = antag/sqrt(4))
avgnormAntag <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgAntag = mean(antagNorm), stdev = sd(antagNorm), sterr = antagNorm/sqrt(4))
avgnormAntag <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgAntag = mean(antagNorm), stdev = sd(antagNorm))
pureavgAntag <- ddply(.data = avgnormAntag, .variables = c("NostrilType", "Odor", "Block"), .fun = summarize, avgAntag2 = mean(avgAntag), stdev = sd(avgAntag), sterr = sd(avgAntag)/2)
ggplot(pureavgAntag, aes(x = NostrilType, y = avgAntag2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~Block) +
geom_errorbar(data = pureavgAntag, position = "dodge", stat = "identity", aes(ymin = avgAntag2 - sterr, ymax = avgAntag2 + sterr))
#dev.off()
together <- rbind(pureavgAntag, pureavg)
View(pureavgAntag)
antagsub <- subset(pureavgAntag, NostrilType == "Alone" & Odor != "TMA")
View(antagsub)
names(antagsub) <- c("NostrilType", "Odor", "Block",  "Intenstiy", "stdev", "sterr")
tmasub <- subset(pureavg, NostrilType == "Alone" & Odor == "TMA")
together <- rbind(tmasub, antagsub)
View(tmasub)
View(antagsub)
View(tmasub)
names(tmasub) <-  c("NostrilType", "Odor", "Block",  "Intenstiy", "stdev", "sterr")
together <- rbind(tmasub, antagsub)
View(together)
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
#dev.off()
names(antagsub) <- c("NostrilType", "Odor", "Block",  "Intenstity", "stdev", "sterr")
tmasub <- subset(pureavg, NostrilType == "Alone" & Odor == "TMA")
names(tmasub) <-  c("NostrilType", "Odor", "Block",  "Intenstity", "stdev", "sterr")
together <- rbind(tmasub, antagsub)
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
#dev.off()
avgnormAntag <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgAntag = mean(antagNorm), stdev = sd(antagNorm))
pureavgAntag <- ddply(.data = avgnormAntag, .variables = c("NostrilType", "Odor", "Block"), .fun = summarize, avgAntag2 = mean(avgAntag), stdev = sd(avgAntag), sterr = sd(avgAntag)/2)
antagsub <- subset(pureavgAntag, NostrilType == "Alone" & Odor != "TMA")
names(antagsub) <- c("NostrilType", "Odor", "Block",  "Intenstity", "stdev", "sterr")
tmasub <- subset(pureavg, NostrilType == "Alone" & Odor == "TMA")
names(tmasub) <-  c("NostrilType", "Odor", "Block",  "Intenstity", "stdev", "sterr")
together <- rbind(tmasub, antagsub)
#devSVG("splitnostrilgraph2.svg")
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
antagsub <- subset(pureavgAntag, NostrilType == "Alone" & Odor != "TMA")
names(antagsub) <- c("NostrilType", "Odor", "Block",  "Intensity", "stdev", "sterr")
tmasub <- subset(pureavg, NostrilType == "Alone" & Odor == "TMA")
names(tmasub) <-  c("NostrilType", "Odor", "Block",  "Intensity", "stdev", "sterr")
together <- rbind(tmasub, antagsub)
#devSVG("splitnostrilgraph2.svg")
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
#dev.off()
devSVG("/Volumes/mainland/Projects/TMA blocker/Poster/splitnostrilgraphIntensity.svg")
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
dev.off()
library(RSvgDevice)
devSVG("/Volumes/mainland/Projects/TMA blocker/Poster/splitnostrilgraphIntensity.svg")
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
dev.off()
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
together$Odor <- factor(together$Odor, levels = ("TMA", "Non", "Lin"))
together$Odor <- factor(together$Odor, levels = c("TMA", "Non", "Lin"))
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
devSVG("/Volumes/mainland/Projects/TMA blocker/Poster/splitnostrilgraphIntensity.svg")
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
dev.off()
View(df.merge)
library(ggplot2)
library(plyr)
library(reshape2)
#function to delete a certain amount of nas
delete.na <- function(df, n=0) {
log <- apply(df, 2, is.na)
logindex <- apply(log, 1, function(x) sum(x) <= n)
df[logindex, ]
}
df.merge <- delete.na(df.merge)
#try new way of normalizingdata - noramlizes data between 0 and 1 - use this
#range01 <- function(x){(x-min(x))/(max(x)-min(x))}
#normalizedData <- ddply(df.merge, .variables = c("Subject", "Block"), transform, TMANorm = range01(TMA), antagNorm = range01(Antag))
#don't normalize it for now... maybe come back to this
#for each subject, calculate the difference between central and total and the difference between total and peripheral. Plot those against each other
#first average within subject the different ratings
centralEffectAverage <- ddply(.data = df.merge, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMA))
#then look at the differences
blockingDifferences <- ddply(centralEffectAverage, .(Subject,Block),function(x) c(CentralBlock=(subset(x,Odor=="TMA")$avgTMA-subset(x,NostrilType=="Different")$avgTMA)*1, PeripheralBlock=(subset(x,NostrilType=="Different")$avgTMA-subset(x,NostrilType=="Same")$avgTMA)*1,TotalBlock=(subset(x,Odor=="TMA")$avgTMA-subset(x,NostrilType=="Same")$avgTMA*1)))
View(blockingDifferences)
ggplot(data = subset(blockingDifferences, Block == "Nonenol"), aes(x = CentralBlock, y = PeripheralBlock, colour = Subject)) +
geom_point()
ggplot(data = subset(blockingDifferences, Block == "Nonenol"), aes(x = CentralBlock, y = PeripheralBlock, colour = factor(Subject))) +
geom_point()
ggplot(data = subset(blockingDifferences, Block == "Nonenol"), aes(x = CentralBlock, y = PeripheralBlock, colour = factor(Subject))) +
geom_point() +
abline(a=0,b=0,col="blue")
ggplot(data = subset(blockingDifferences, Block == "Nonenol"), aes(x = CentralBlock, y = PeripheralBlock, colour = factor(Subject))) +
geom_point() +
geom_abline(a=0,b=0,col="blue")
?geom_abline
ggplot(data = subset(blockingDifferences, Block == "Nonenol"), aes(x = CentralBlock, y = PeripheralBlock, colour = factor(Subject))) +
geom_point() +
geom_abline(intercept = 0, slope = 1,col="blue")
pdf("/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup1/unityline_splitNostril.pdf")
ggplot(data = subset(blockingDifferences, Block == "Nonenol"), aes(x = CentralBlock, y = PeripheralBlock, colour = factor(Subject))) +
geom_point() +
geom_abline(intercept = 0, slope = 1,col="blue")
dev.off()
ggplot(data = subset(blockingDifferences, Block == "Linalool"), aes(x = CentralBlock, y = PeripheralBlock, colour = factor(Subject))) +
geom_point() +
geom_abline(intercept = 0, slope = 1,col="blue")
dev.off()
pdf("/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup1/unityline_splitNostril.pdf")
ggplot(data = subset(blockingDifferences, Block == "Nonenol"), aes(x = CentralBlock, y = PeripheralBlock, colour = factor(Subject))) +
geom_point() +
geom_abline(intercept = 0, slope = 1,col="blue")
dev.off()
ggplot(data = subset(blockingDifferences, Block == "Linalool"), aes(x = CentralBlock, y = PeripheralBlock, colour = factor(Subject))) +
geom_point() +
geom_abline(intercept = 0, slope = 1,col="blue")
ggplot(blockingDifferences, aes(x = CentralBlock, y = PeripheralBlock, colour = factor(Subject))) +
geom_point() +
geom_abline(intercept = 0, slope = 1,col="blue")  +
facet_grid(.~Block)
pdf("/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup1/unityline_splitNostril.pdf", width = 11.5, height = 8)
ggplot(blockingDifferences, aes(x = CentralBlock, y = PeripheralBlock, colour = factor(Subject))) +
geom_point() +
geom_abline(intercept = 0, slope = 1,col="blue")  +
facet_grid(.~Block)
dev.off()
library(ggplot2)
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
#dev.off()
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
normalizedData <- ddply(df.merge, .variables = c("Subject"), transform, TMANorm = range01(TMA), antagNorm = range01(Antag))
ggplot(normalizedData, aes(x = NostrilType, y = TMANorm, fill = Block)) +
geom_boxplot()
#normalize data
avgnorm <- ddply(.data = normalizedData, .variables = c("Subject", "NostrilType", "Odor", "Block"), .fun= summarize, avgTMA = mean(TMANorm), stdev = sd(TMANorm), sterr = stdev/sqrt(4))
pureavg <- ddply(.data = avgnorm, .variables = c("NostrilType", "Odor", "Block"), .fun = summarize, avgTMA2 = mean(avgTMA), stdev = sd(avgTMA), sterr = sd(avgTMA)/2)
#devSVG("splitnostrilgraph2.svg")
ggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~Block) +
geom_errorbar(data = pureavg, position = "dodge", stat = "identity", aes(ymin = avgTMA2 - sterr, ymax = avgTMA2 + sterr))
View(df.merge)
write.table(df.merge, "df.merge")
write.table(df.merge, "dfmerge.txt")
ggplot(normalizedData, aes(x = NostrilType, y = TMANorm, fill = Block)) +
geom_boxplot()
ggplot(pureavg, aes(x = NostrilType, y = avgTMA2, fill = Block)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(.~Block) +
geom_errorbar(data = pureavg, position = "dodge", stat = "identity", aes(ymin = avgTMA2 - sterr, ymax = avgTMA2 + sterr))
ggplot(together, aes(x = Odor, y = Intensity, fill = Odor)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(data = together, position = "dodge", stat = "identity", aes(ymin = Intensity - sterr, ymax = Intensity + sterr))
